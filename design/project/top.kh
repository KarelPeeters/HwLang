import std.types.[bool, uint, int_range, natural, any];

//import spi_master.spi_master;

// TODO check the signature of all items without generic parameters immediately
//   for constants that means immediately fully visiting them
//   eventually, include generic items but just with a "placeholder" value for generic params
const A: uint = 5;

pub module top ports(
    clk: in clock,
    rst: in async bool,

    y: out sync(clk, rst) bool,
) body {
    const c: bool = false;
    reg s: sync(clk, rst) bool = undefined;
    reg out y = false;
    wire w0: async bool;
    wire w1: sync(clk, rst) bool = y;

    clocked(clk, rst) {
        s = !s;
        y = s;
        w0 = false;
    }

//    combinatorial {
//        s = w0;
//    }

//    instance spi_master generics(packet_length=8) ports(
//        .clk(clk),
//        .rst(rst),
//        .data(undefined),
//        .data_valid(false),
//        .data_ready(),
//        .sclk(),
//        .mosi(),
//        .cs(),
//    );
}
