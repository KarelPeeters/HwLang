import std.types.[bool, int_range, int, uint, natural, uint_bits, Option];
import std.util.print;

// TODO get this early return working in hardware
fn index_of_first_set_bit(n: uint, x: [n]bool) -> Option(int_range(0..n)) {
    for (i in 0..n) {
        if (x[i]) {
            return Option.Some(i);
        }
    }
    return Option.None;
}

fn index_to_one_hot(n: uint, index: uint(0..n)) -> [n]bool {
    var result = [0] * n;
    result[index] = 1;
    return result;
}
